(defun count-appearances (L x)
    (cond
        ((null L) 0)
        ((atom (car L))
            (if (equal (car L) x)
                (+ 1 (count-appearances (cdr L) x))
                (count-appearances (cdr L) x)
            )
        )
        ((listp (car L))
            (+ (count-appearances (car L) x) (count-appearances (cdr L) x))
        )
    )
)

(defun to-delete (L OG)
    (cond
        ((null L) nil)
        ((atom (car L))
            (if (< 1 (count-appearances OG (car L)))
                (to-delete (cdr L) OG)
                (cons (car L) (to-delete (cdr L) OG))
            )
        )
        ((listp (car L)) (cons (to-delete (car L) OG) (to-delete (cdr L) OG)))
    )
)

(defun sterg (L)
    (to-delete L L)
)
(print (sterg '(1 (2 c f 1 (d 2 c 4) e))))