the return value of a function
-> echo $? to see it
    -> 0 if all went well

any shell program begins with #!/bin/bash
    -> reference to the version of shell i wanna use
        bash - born again shell :)

    # <- comment usually, but at the beginning it's a DIRECTIVE

if an argument doesn't exits, bash considers it an empty string
$10 is not actually the 10th arg, rather the first one, to which we append 10
for it to give me the 10th, ${10}

>./1.sh 1 2 3 4 5 6 7 8 9 0
First argument: 1; Second argument 2
The 10th argument: 0

$* retruns all arguments as a string
$@ retruns it as an array

when assigning variables, DONT USE WHITE SPACES, because it thinks it's a command, and = is the arg

IFS=$'\n' -> internal field separator

if condition; then
fi

anything that's not a link, pipe, directory is essentially a regular file
for using grep to check if it's an int, we pipe it to it
    > du -b -> tells you the numb of bytes of a file
